{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","services/services.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactsList/ContactsList.js","components/Section/Section.js","components/Filter/Filter.js","components/Container/Container.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContacts","a","axios","get","data","addContacts","name","number","contact","post","deleteContact","id","delete","defaults","baseURL","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getFilter","state","contacts","filter","getFilteredContacts","createSelector","items","normalizeFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","onSubmit","contactInfo","preventDefault","find","toast","error","actions","api","className","s","form","label","input","type","onChange","pattern","title","required","btn","style","marginLeft","width","height","ContactsList","onDeleteContact","useEffect","list","map","item","onClick","Section","children","section","Filter","target","placeholder","Container","container","App","createReducer","payload","loading","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a81587.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__2O7n3\",\"btn\":\"ContactsList_btn__3aoj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import axios from \"axios\";\n//import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nexport async function fetchContacts() {\n    const { data } = await axios.get('./contacts');\n    return data;\n}\n\n\n\nexport async function addContacts ({ name, number }) {\n    const contact = { name, number };\n\n    const { data } = await axios.post('./contacts', contact);\n    return data;\n}\n\nexport async function deleteContact(id) {\n    const { data } = await axios.delete(`./contacts/${id}`);\n    return data;\n}\n\n","\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n","import { createSelector } from \"reselect\";\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => state.contacts.items;\n\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getAllContacts],\n  (filter, items) => {\n    const normalizeFilter = filter.toLowerCase();\n    return  items.filter(({ name}) =>\n      name.toLowerCase().includes(normalizeFilter),\n    )}\n)","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { TiTickOutline } from 'react-icons/ti';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction ContactForm() {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n \n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n \n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Phone\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n          <TiTickOutline style={{\n            marginLeft: 10, width: 25, height: 25\n          }} />\n        </button>\n      </form>\n    )\n\n}\n\nexport default ContactForm;\n","import * as api from '../../services/services';\nimport * as actions from './contacts-actions';\n\n\nexport const fetchContacts = () => async dispatch => {\n    \n    dispatch(actions.fetchContactRequest());\n\n    try {\n        const contacts = await api.fetchContacts();\n        dispatch(actions.fetchContactSuccess(contacts))\n\n    } catch (error) {\n        dispatch(actions.fetchContactError(error))\n    }\n }\n\nexport const addContact = contactInfo => async dispatch => {  \n    dispatch(actions.addContactRequest());\n\n    try {\n        \n        const contact = await api.addContacts(contactInfo);\n        dispatch(actions.addContactSuccess(contact))\n    } catch (error) {\n        dispatch(actions.addContactError(error))\n    }\n}\n\nexport const deleteContact = id => async dispatch => {\n    dispatch(actions.deleteContactRequest());\n\n    try {\n        await api.deleteContact(id);\n        dispatch(actions.deleteContactSuccess(id));\n\n    } catch (error) {\n        dispatch(actions.deleteContactError(error))\n    }\n\n} ","\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport s from './ContactsList.module.css';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts-operations';\nimport { TiDeleteOutline } from \"react-icons/ti\";\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactsList = () => {\n\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n   const onDeleteContact = id => dispatch(deleteContact(id));\n\n  useEffect(() => \n    dispatch(fetchContacts()), [dispatch]\n  )\n\n  return (\n    <ul className={ s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          <span>{name} </span><span>{number}</span>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.btn}\n          >\n            Delete\n            <TiDeleteOutline style={{ marginLeft: 5, width: 15, height: 15}}/>\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\n\nexport default Section;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n \nconst Filter = () => {\n  const value = useSelector(state => getFilter(state));\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      Find contacts by name: \n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        className={s.input}\n        placeholder=\"Fiona Holmse\"  \n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;","import { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Section from './components/Section';\nimport { useSelector } from 'react-redux';\nimport Filter from './components/Filter';\nimport Container from 'components/Container';\n\nfunction App() {\n\n  const contacts = useSelector((state) => state.contacts.items);\n    return (\n      <>\n        <Container>\n          <header>\n             <h1 className=\"title\">Phonebook</h1>\n          </header>\n          <ContactForm />\n        \n        <Section title=\"Contacts\">\n          <Filter /> \n          { contacts && <ContactsList/> }\n        </Section> \n        </Container>\n        \n         <ToastContainer />\n      </>\n    );\n  \n}\n\n\nexport default App;\n","import * as actions from './contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n    [actions.fetchContactSuccess]: (state, { payload }) => payload,\n    [actions.addContactSuccess]: (state, { payload}) => [...state, payload],\n    [actions.deleteContactSuccess]: (state, { payload }) => state.filter(item => item.id !== payload),\n    })\n\nconst loading = createReducer(false, {\n    [actions.fetchContactRequest]: () => true,\n    [actions.fetchContactSuccess]: () => false,\n    [actions.fetchContactError]: () => false,\n\n    [actions.addContactRequest]: () => true,\n    [actions.addContactSuccess]: () => false,\n    [actions.addContactError]: () => false,\n\n    [actions.deleteContactRequest]: () => true,\n    [actions.deleteContactSuccess]: () => false,\n    [actions.deleteContactError]: () => false,\n\n})\n\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, {payload}) => payload,\n})\n\nconst error = createReducer(null, {\n    [actions.fetchContactError]: (_, { payload }) => payload,\n    [actions.deleteContactError]:(_, { payload }) => payload,\n    [actions.addContactError]: (_, { payload }) => payload,\n\n})\nexport default combineReducers({ items, filter, loading, error });","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n    //persistStore,\n\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n\n\nimport reducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts:  reducer,\n    },\n    middleware,\n})\n\n//export const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n//import { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n     {/* <PersistGate loading={null} persistor={ persistor}> */}\n         <App />\n      {/* </PersistGate>   */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}