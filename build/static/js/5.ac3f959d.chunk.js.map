{"version":3,"sources":["components/MyTextInput/MyTextInput.js","components/MyTextInput/MyTextInput.module.css","views/Login/Login.module.css","views/Login/Login.js"],"names":["MyTextInput","label","props","useField","field","meta","className","s","htmlFor","id","name","input","touched","error","module","exports","validationSchema","Yup","email","required","password","min","max","Login","dispatch","useDispatch","handleSubmit","useCallback","values","setSubmitting","resetForm","authOperations","logIn","initialValues","onSubmit","formik","form","type","placeholder","autoComplete","btn","disabled","dirty","isValid"],"mappings":"oQAKOA,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAE3C,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,qCACE,uBAAOC,UAAYC,IAAEN,MAAOO,QAASN,EAAMO,IAAMP,EAAMQ,KAAvD,SAA8DT,IAC9D,+CAAOK,UAAWC,IAAEI,OAAWP,GAAWF,IACzCG,EAAKO,SAAWP,EAAKQ,MACpB,qBAAKP,UAAWC,IAAEM,MAAlB,SAA0BR,EAAKQ,QAC7B,U,oBCbXC,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,MAAQ,2BAA2B,MAAQ,6B,oBCAhGD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,IAAM,qB,uKCS7CC,EAAmBC,IAAW,CAClCC,MAAOD,MAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,MACPI,IAAI,EAAG,iBACPC,IAAI,GAAI,kBACRH,SAAS,cA4CCI,EAzCD,WACZ,IAAMC,EAAWC,cAEbC,EAAeC,uBAAY,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACzCZ,EAAoBU,EAApBV,MAAOE,EAAaQ,EAAbR,SACfI,EAASO,IAAeC,MAAM,CAAEd,QAAOE,cAEvCS,GAAc,GACdC,EAAU,CAAEF,OAAQ,OAGxB,CAACJ,IACH,OACA,cAAC,IAAD,CACES,cAAe,CAAEf,MAAO,GAAIE,SAAU,IACtCJ,iBAAkBA,EAChBkB,SAAUR,EAHd,SAKK,SAACS,GAAD,OACC,eAAC,IAAD,CAAM7B,UAAYC,IAAE6B,KAApB,UACF,cAACpC,EAAA,EAAD,CACKC,MAAM,aACNS,KAAK,QACL2B,KAAK,QACNC,YAAY,kBACdC,aAAa,OACf,cAACvC,EAAA,EAAD,CACEC,MAAM,gBACNS,KAAK,WACH2B,KAAK,WACLE,aAAa,OAEhB,wBAAQjC,UAAYC,IAAEiC,IAAKH,KAAK,SAASI,WAAYN,EAAOO,OAASP,EAAOQ,SAA5E","file":"static/js/5.ac3f959d.chunk.js","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport s from './MyTextInput.module.css';\n\n \n const MyTextInput = ({ label, ...props }) => {\n\n   const [field, meta] = useField(props);\n   return (\n     <>\n       <label className={ s.label} htmlFor={props.id || props.name}>{label}</label>\n       <input className={s.input} {...field} {...props} />\n       {meta.touched && meta.error ? (\n         <div className={s.error}>{meta.error}</div>\n       ) : null}\n     </>\n   );\n };\n\nexport { MyTextInput }; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"MyTextInput_label__16E4R\",\"input\":\"MyTextInput_input__20x5E\",\"error\":\"MyTextInput_error__3yBsu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__RnYgG\",\"btn\":\"Login_btn__I1miW\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { MyTextInput } from 'components/MyTextInput/MyTextInput';\nimport authOperations from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\n//import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Login.module.css';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Min 8 symbols')\n    .max(20, 'Max 15 symbols')\n    .required('Required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  \nconst handleSubmit = useCallback((values, { setSubmitting, resetForm }) => {\n          const { email, password } = values;\n          dispatch(authOperations.logIn({ email, password }));\n\n          setSubmitting(false);\n          resetForm({ values: '' })\n\n\n   }, [dispatch])\n    return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {(formik) => (\n          <Form className={ s.form}>\n        <MyTextInput\n             label=\"Your email\"\n             name=\"email\"\n             type=\"email\"\n            placeholder=\"jane@formik.com\"\n          autoComplete=\"on\"/>\n        <MyTextInput\n          label=\"Your password\"\n          name=\"password\"\n            type=\"password\"\n            autoComplete=\"on\"\n        />\n         <button className={ s.btn} type=\"submit\" disabled={!(formik.dirty && formik.isValid)}>Submit</button>\n      </Form>\n        )}\n    \n\n    </Formik>\n  );\n};\n\nexport default Login;\n\n\n"],"sourceRoot":""}